<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描组件-->
    <context:component-scan base-package="com.ehsanzhao.mvc"></context:component-scan>

    <!--配置Thymeleaf视图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <!--配置视图控制器-->
    <mvc:view-controller path="/testViewController" view-name="success"></mvc:view-controller>
    <mvc:view-controller path="/error" view-name="exceptionResolver"></mvc:view-controller>

    <!--开放对静态资源的访问，springmvc找不到，就去默认的servlet中去找-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!--开启mvc的注解驱动，如果使用了view-controller标签不配置这个注解驱动的话，所有的@RequestMapping映射关系都会失效-->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--配置文件上传解析器，将上传的文件封装为MultipartFile-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--配置拦截器Interceptor-->
    <mvc:interceptors>
        <ref bean="firstInterceptor"></ref>
        <ref bean="secondInterceptor"></ref>
        <!--以下两种方式默认对所有请求拦截-->
<!--        <bean class="com.ehsanzhao.mvc.interceptors.FirstInterceptor"></bean>-->
<!--        <ref bean="firstInterceptor"></ref>-->
        <!--以下方式可以配置拦截请求路径-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/> 此处必须/**，/*只会匹配一层-->
<!--            <mvc:exclude-mapping path="/testInterceptor"/>-->
<!--            <mvc:mapping path="/testInterceptor"/>-->
<!--            <ref bean="firstInterceptor"></ref>-->
<!--        </mvc:interceptor>-->
    </mvc:interceptors>

    <!--配置异常处理器-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                &lt;!&ndash;配置制定错误跳转到制定view&ndash;&gt;-->
<!--                <prop key="java.lang.Exception">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--        &lt;!&ndash;配置异常信息值&ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="error"></property>-->
<!--    </bean>-->

</beans>